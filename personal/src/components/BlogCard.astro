---
import FormattedDate from "./FormattedDate.astro";
export interface Props {
  title: string;
  description?: string;
  date: Date;
  image?: string;
  url?: string;
  web?: string;
  github?: string;
  detailImg?: boolean;
  externUrl?: boolean;
  draft?: boolean;
  type?: "blog-post" | "app";
}

const {
  title,
  image = "/placeholder-about.jpg",
  date,
  url,
  detailImg = false,
  description,
  externUrl,
  type,
  draft,
  github,
  web,
} = Astro.props;
---

<div class="bcard comeFromBelow hstack f-wrap m-0">
  <div class="time-col">
    <FormattedDate date={date} />
  </div>
  <div class="details">
    <a data-transition-page-link class="slide-bg-hover" href={url}>
      {
        type === "blog-post" && (
          <i class="fa fa-pencil-square-o card-type" title="Blog post" />
        )
      }
      {type === "app" && <i class="fa fa-rocket card-type" title="App" />}
      {title}</a
    >
    <br />
    {draft && <span class="text-c-unfocus">DRAFT</span>}
    {description && <p class="description">{description}</p>}
    {
      detailImg && (
        <a
          href={url}
          class:list={["card-image-anchor p-0", !url && "no-pointer"]}
          target={externUrl ? "_blank" : undefined}
        >
          <img src={image} />
        </a>
      )
    }
    <div class="links hstack">
      {
        github && (
          <a
            data-transition-page-link
            class="p-0 external-link"
            href={github}
            target="_blank"
          >
            <i class="fa-brands fa-github font-icon-button" title="Github" />
          </a>
        )
      }
      {
        web && (
          <a
            data-transition-page-link
            class="p-0 external-link"
            href={web}
            target="_blank"
          >
            <i class="fa-solid fa-globe font-icon-button" title="Website" />
          </a>
        )
      }
    </div>
  </div>
</div>

<style>
  img {
    border-radius: var(--border-radius);
    object-fit: cover;
    object-position: center center;
    height: 200px;
    width: 280px;
    filter: grayscale(100%);
    transition: filter 0.2s;
  }

  .description {
    max-width: 500px;
  }

  .card-image-anchor {
  }

  .card-image-anchor:hover > img {
    filter: grayscale(0%);
  }

  .no-pointer {
    cursor: default !important;
  }

  .card-type {
    font-size: 0.8rem;
    margin-right: 2px;
  }

  .details {
    //gap: calc(var(--v-gap) / 2);
  }

  .time-col {
    width: 100px;
    @media (width >= 768px) {
      text-align: right;
    }
  }

  a {
    padding: 0 calc(var(--h-gap) / 2);
    margin-left: calc(var(--h-gap) / -2);
  }

  a.external-link:hover {
    background-color: transparent;
  }

  a.external-link > i {
    transition: all var(--anim-duration) ease-in-out;
  }

  a.external-link:hover > i {
    transform: scale(1.7);
    color: var(--color-text) !important;
  }
</style>
